// <auto-generated />
using System;
using MedicineDispencer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedicineDispencer.Migrations
{
    [DbContext(typeof(PillDispenserContext))]
    [Migration("20250621233947_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("MedicineDispencer.Data.Compartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompartmentNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MedicationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MedicationId");

                    b.ToTable("Compartments");
                });

            modelBuilder.Entity("MedicineDispencer.Data.DosingTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntervalSeconds")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompartmentId");

                    b.ToTable("DosingTimes");
                });

            modelBuilder.Entity("MedicineDispencer.Data.MedicationStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("MedicineDispencer.Data.RefillLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmountAdded")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RefillTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RefillLogs");
                });

            modelBuilder.Entity("MedicineDispencer.Data.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmountToDispense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DispenseTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("MedicineDispencer.Data.Compartment", b =>
                {
                    b.HasOne("MedicineDispencer.Data.MedicationStock", "Medication")
                        .WithMany()
                        .HasForeignKey("MedicationId");

                    b.Navigation("Medication");
                });

            modelBuilder.Entity("MedicineDispencer.Data.DosingTime", b =>
                {
                    b.HasOne("MedicineDispencer.Data.Compartment", "Compartment")
                        .WithMany("DosingTimes")
                        .HasForeignKey("CompartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compartment");
                });

            modelBuilder.Entity("MedicineDispencer.Data.Compartment", b =>
                {
                    b.Navigation("DosingTimes");
                });
#pragma warning restore 612, 618
        }
    }
}

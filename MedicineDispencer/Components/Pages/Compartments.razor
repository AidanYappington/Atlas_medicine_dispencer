@page "/Compartments"
@using Microsoft.EntityFrameworkCore
@using MedicineDispencer.Data
@inject PillDispenserContext Db
@inject IJSRuntime JSRuntime

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h3 class="mb-0">üíä Medicijn Dispenser Status</h3>
        </div>
        <div class="card-body">
            @if (compartments == null || compartments.Count == 0)
            {
                <div class="alert alert-warning text-center">
                    <strong>‚ö†Ô∏è Geen medicijnen geconfigureerd.</strong><br />
                    Ga naar de <a href="/Configure">configuratiepagina</a> om te starten.
                </div>
            }
            else
            {
                <div class="row">
                    @foreach (var compartment in compartments)
                    {
                        <div class="col-md-6 mb-4">
                            <div class="card h-100 shadow-sm">
                                <div class="card-header bg-light">
                                    <h5 class="mb-0">Compartiment @compartment.Id</h5>
                                </div>
                                <div class="card-body">
                                    <p><strong>Medicijn:</strong> @compartment.Medication?.Name (@compartment.Medication?.Dosage)</p>

                                    <p><strong>Voorraad:</strong> @compartment.Stock tabletten</p>

                                    <p><strong>Volgende dosering:</strong> @GetNextDoseTime(compartment)</p>

                                    <button class="btn btn-outline-success btn-sm" @onclick="() => TriggerMedicijnHerinnering(compartment.Id)">
                                        üîî Test Herinnering
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<Compartment> compartments = new();

    protected override async Task OnInitializedAsync()
    {
        compartments = await Db.Compartments
            .Include(c => c.Medication)
            .Include(c => c.DosingTimes)
            .ToListAsync();

    }

    private void TriggerMedicijnHerinnering(int id)
    {
        // TODO: real reminder logic (e.g. GPIO / notification)
        Console.WriteLine($"Reminder triggered for Compartment {id}");
    }

    private string GetNextDoseTime(Compartment compartment)
    {
        if (compartment.DosingTimes == null || compartment.DosingTimes.Count == 0)
            return "Geen doseringen gepland";

        // Get the next dosing time today or tomorrow
        var now = DateTime.Now.TimeOfDay;
        var next = compartment.DosingTimes
            .Select(dt => dt.Time)
            .Where(t => t > now)
            .OrderBy(t => t)
            .FirstOrDefault();

        if (next == default)
            next = compartment.DosingTimes.Select(t => t.Time).OrderBy(t => t).First();

        var timeToday = DateTime.Today + next;
        var countdown = timeToday - DateTime.Now;

        return $"{next:hh\\:mm} (in {countdown.Hours}h {countdown.Minutes}m)";
    }
}

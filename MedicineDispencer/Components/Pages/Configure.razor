@page "/Configure"
@using MedicineDispencer.Data
@inject PillDispenserContext Db

<div class="container">
    <div class="card mb-4">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h3 class="mb-0">💊 Compartiment Configuratie</h3>
        </div>
        <div class="card-body">

            <div class="mb-3">
                <label class="form-label">Kies compartiment:</label>
                <select class="form-select" @bind="selectedCompartmentNumber">
                    <option disabled value="">-- Selecteer een compartiment --</option>
                    @for (int i = 1; i <= 4; i++)
                    {
                        <option value="@i">Compartiment @i</option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">Kies medicijn:</label>
                <select class="form-select" @bind="selectedMedicationId">
                    <option disabled value="">-- Selecteer een medicijn --</option>
                    @foreach (var med in medications)
                    {
                        <option value="@med.Id">@med.Name (@med.Dosage)</option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">Doseringstijden (seconden):</label>
                @for (int i = 0; i < dosingIntervals.Count; i++)
                {
                    <div class="input-group mb-2">
                        <input type="number" class="form-control" @bind="dosingIntervals[i]" min="1" />
                        <button class="btn btn-outline-danger" @onclick="() => RemoveDosingTime(i)">Verwijder</button>
                    </div>
                }
                <button class="btn btn-outline-primary" @onclick="AddDosingTime">➕ Interval toevoegen</button>
            </div>

            <button class="btn btn-primary mt-3" @onclick="SaveCompartmentConfig">💾 Opslaan</button>

            @if (!string.IsNullOrWhiteSpace(successMessage))
            {
                <div class="alert alert-success mt-3">@successMessage</div>
            }
        </div>
    </div>
</div>

@code {
    private int selectedCompartmentNumber;
    private int selectedMedicationId;
    private List<int> dosingIntervals = new();
    private List<MedicationStock> medications = new();
    private string successMessage = "";

    protected override void OnInitialized()
    {
        medications = Db.Medications.ToList();
    }

    private void AddDosingTime()
    {
        dosingIntervals.Add(30); // default 30s
    }

    private void RemoveDosingTime(int index)
    {
        if (index >= 0 && index < dosingIntervals.Count)
            dosingIntervals.RemoveAt(index);
    }

    private void SaveCompartmentConfig()
    {
        successMessage = "";

        if (selectedCompartmentNumber < 1 || selectedMedicationId == 0 || !dosingIntervals.Any())
        {
            successMessage = "⚠️ Vul alle velden in en voeg minstens één interval toe.";
            return;
        }

        var medication = Db.Medications.FirstOrDefault(m => m.Id == selectedMedicationId);
        if (medication == null)
        {
            successMessage = "❌ Geselecteerd medicijn niet gevonden.";
            return;
        }

        var newCompartment = new Compartment
        {
            CompartmentNumber = selectedCompartmentNumber,
            Medication = medication,
            Stock = medication.Stock,
            DosingTimes = dosingIntervals.Select(seconds => new DosingTime { IntervalSeconds = seconds }).ToList()
        };

        Db.Compartments.Add(newCompartment);
        Db.SaveChanges();

        successMessage = $"✅ Compartiment {selectedCompartmentNumber} succesvol geconfigureerd.";

        // Reset form
        selectedCompartmentNumber = 0;
        selectedMedicationId = 0;
        dosingIntervals.Clear();
    }
}
